{"ast":null,"code":"var _jsxFileName = \"/Users/mikko/Desktop/Web2022/Exercises/exercise-9/src/App.js\",\n    _s = $RefreshSig$();\n\nimport MoviesList from \"./components/MoviesList\";\nimport React from \"react\";\nimport { ReactDOM } from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\"; // const movies = [\n//   {\n//     id: 1,\n//     title: \"Movie 1\",\n//     openingText: \"A long time ago...\",\n//     releaseDate: \"1977-05-25\",\n//   },\n//   {\n//     id: 2,\n//     title: \"Movie 2\",\n//     openingText: \"An even longer time ago...\",\n//     releaseDate: \"1999-05-19\",\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = async () => {\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json(); //console.log(data);\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"JEqc00c341OlHlGTH5J/47WahuY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MoviesList","React","ReactDOM","useState","App","movies","setMovies","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message"],"sources":["/Users/mikko/Desktop/Web2022/Exercises/exercise-9/src/App.js"],"sourcesContent":["import MoviesList from \"./components/MoviesList\";\nimport React from \"react\";\nimport { ReactDOM } from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\n// const movies = [\n//   {\n//     id: 1,\n//     title: \"Movie 1\",\n//     openingText: \"A long time ago...\",\n//     releaseDate: \"1977-05-25\",\n//   },\n//   {\n//     id: 2,\n//     title: \"Movie 2\",\n//     openingText: \"An even longer time ago...\",\n//     releaseDate: \"1999-05-19\",\n//   },\n// ];\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = async () => {\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      //console.log(data);\n\n      const transformedMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n        {error && <p>{error}</p>}\n      </section>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMM,kBAAkB,GAAG,YAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;;MAEA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB,CAPE,CAQF;;MAEA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQApB,SAAS,CAACU,iBAAD,CAAT;IACD,CAnBD,CAmBE,OAAOT,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACD;EACF,CAvBD;;EAyBA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAQ,OAAO,EAAElB,kBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,wBACE,QAAC,UAAD;QAAY,MAAM,EAAEJ;MAApB;QAAA;QAAA;QAAA;MAAA,QADF,EAEGE,KAAK,iBAAI;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAWD,CAxCD;;GAAMH,G;;KAAAA,G;AA0CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}